name: Code Coverage

on: [push, pull_request]

jobs:
  grcov:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
    steps:
      - uses: actions/checkout@v2
      - name: Install latest nightly
        uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly
          profile: minimal
          override: true

      - name: Run cargo test
        if: startsWith(matrix.os, 'macOS') == false
        uses: actions-rs/cargo@v1
        with:
          command: test
          args: --all --all-features --no-fail-fast
        env:
          CARGO_INCREMENTAL: '0'
          RUSTFLAGS: '-Zprofile -Ccodegen-units=1 -Cinline-threshold=0 -Clink-dead-code -Coverflow-checks=off'

      # The only difference from previous step is that `RUSTFLAGS` `-Clink-dead-code` flag
      # is removed for macOS tests because `core-foundation` crate breaks compilation.
      #
      # See https://github.com/rust-lang/rust/issues/63047 for details
      - name: Run cargo test (macOS)
        if: startsWith(matrix.os, 'macOS') == true
        uses: actions-rs/cargo@v1
        with:
          command: test
          args: --all --all-features --no-fail-fast
        env:
          CARGO_INCREMENTAL: '0'
          RUSTFLAGS: '-Zprofile -Ccodegen-units=1 -Cinline-threshold=0 -Coverflow-checks=off'

      - name: Install grcov
        uses: actions-rs/install@v0.1
        with:
          crate: grcov
          use-tool-cache: true

      - name: Run grcov
        id: coverage
        uses: actions-rs/grcov@v0.1
      - name: Coveralls upload
        uses: coverallsapp/github-action@v1.1.0
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          path-to-lcov: ${{ steps.coverage.outputs.report }}

  grcov_finalize:
    runs-on: ubuntu-latest
    needs: grcov
    steps:
      - name: Finalize Coveralls upload
        uses: coverallsapp/github-action@v1.1.0
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          parallel-finished: true